name: CI / CD â€” Deploy to Server

on:
  push:
    branches:
      - main
      - master

jobs:
  deploy:
    name: Deploy via SSH
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          if [ -n "${{ secrets.SSH_KNOWN_HOSTS }}" ]; then
            echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          else
            ssh-keyscan -H "${{ secrets.DEPLOY_HOST }}" >> ~/.ssh/known_hosts
          fi

      - name: Verify SSH connectivity
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=yes -o ConnectTimeout=10 ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "echo SSH OK"

      - name: Deploy: pull latest and recreate services
        env:
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          DEPLOY_BRANCH: ${{ github.ref_name }}
        run: |
          # Use SSH to update the repo on the server and run docker compose
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=yes ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "\
            set -e && \
            cd '${DEPLOY_PATH}' && \
            git fetch --all --prune && \
            git reset --hard origin/${DEPLOY_BRANCH:-main} && \
            # optionally pull images if you publish them to a registry
            docker compose pull || true && \
            docker compose up -d --build --remove-orphans && \
            docker system prune -af --volumes || true"

      - name: Notify
        if: always()
        run: echo "Deploy finished for ${{ github.ref }}"
